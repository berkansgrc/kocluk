
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Users collection: only admins can read/write user roles
    match /users/{userId} {
      allow read, write: if isAdmin(request.auth.uid);
    }

    // Students collection:
    // - Students can read/write their own data
    // - Admins can read/write any student's data
    match /students/{studentId} {
      allow read, write: if request.auth.uid == studentId || isAdmin(request.auth.uid);
    }

    // Subjects collection:
    // - Authenticated users (students and admins) can read subjects
    // - Admins can create, update, delete subjects
    match /subjects/{subjectId} {
        allow read: if request.auth != null;
        allow write: if isAdmin(request.auth.uid);
    }
    
    // ExamResults collection:
    // - Students can create and read their own results
    // - Admins can read anyone's results
    // - No one can update or delete results from the client-side to ensure data integrity
    match /examResults/{resultId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if false; // Protect data integrity
    }
  }
}
