
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to make rules cleaner and more reusable.
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isSignedIn() && getUserData(request.auth.uid).role == 'admin';
    }

    // Rules for contactSubmissions collection
    // Allow anyone to create (submit the form).
    // Allow only admins to read the submissions.
    // Disallow update and delete for everyone.
    match /contactSubmissions/{submissionId} {
      allow create: if true;
      allow read: if isAdmin();
      allow update, delete: if false;
    }

    // Rules for students collection
    // Allow admins to do anything.
    // Allow students to read and update their own data.
    match /students/{studentId} {
      allow read, write: if isAdmin() || isOwner(studentId);
    }
    
    // Rules for users collection
    // Allow admins to do anything.
    // Allow users to read their own user role document.
    match /users/{userId} {
       allow read, write: if isAdmin();
       allow read: if isOwner(userId);
    }

    // Rules for subjects collection
    // Only admins can read and write to the library.
    match /subjects/{subjectId} {
      allow read, write: if isAdmin();
    }
  }
}
